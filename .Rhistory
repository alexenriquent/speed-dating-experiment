corrplot(correlation, method = "shade", title = title,
order = "hclust", addrect = 2, mar = c(0, 0, 2, 0),
tl.col = "black", addCoef.col = "black")
}
plot.correlation(correlation, "Attribute Correlation")
plot.correlation(male_correlation, "Men's Attributes (Rated by Female Participants)")
plot.correlation(female_correlation, "Women's Attributes (Rated by Male Participants)")
correlation_diff <- max(abs(male_correlation - female_correlation))
print(correlation_diff)
library(rpart)
library(rpart.plot)
library(partykit)
library(ROCR)
data.format <- function(data) {
data$dec_o <- as.character(data$dec_o)
data$dec_o[data$dec_o == "1"] <- "yes"
data$dec_o[data$dec_o == "0"] <- "no"
data
}
confusion.matrix <- function(prediction, truth) {
xtab <- (table(prediction, truth))
confusion <- matrix(rev(as.vector(xtab)), ncol = 2, byrow = TRUE)
colnames(confusion) <- c("Pred:yes", "Pred:no")
rownames(confusion) <- c("Actual:yes", "Actual:no")
confusion <- as.table(confusion)
}
confusion.analysis <- function(matrix) {
tp <- matrix[1, 1]
fn <- matrix[1, 2]
fp <- matrix[2, 1]
tn <- matrix[2, 2]
accuracy <- (tp + tn) / (tp + tn + fp + fn)
}
data <- read.csv("data/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
data <- data.format(data)
train <- data[2001:nrow(data), ]
test <- data[1:2000, ]
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o + gender
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
prediction <- predict(rpart, test, type = "class")
truth <- test$dec_o
roc <- prediction(predict(rpart, newdata = test, type = "prob")[, 2], test$dec_o)
plot(performance(roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
confusion <- confusion.matrix(prediction, truth)
confusion
male <- data[data$gender == 1, ]
male.train <- male[1001:nrow(male), ]
male.test <- male[1:1000, ]
male.tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
male.rpart <- rpart(male.tree, data = male.train, method = "class")
male.rparty <- as.party(male.rpart)
plot(male.rparty, type = "simple")
male.prediction <- predict(male.rpart, male.test, type = "class")
male.truth <- male.test$dec_o
male.roc <- prediction(predict(male.rpart, newdata = male.test, type = "prob")[, 2], male.test$dec_o)
plot(performance(male.roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
male.confusion <- confusion.matrix(male.prediction, male.truth)
male.confusion
female <- data[data$gender == 0, ]
female.train <- female[1001:nrow(female), ]
female.test <- female[1:1000, ]
female.tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
female.rpart <- rpart(female.tree, data = female.train, method = "class")
female.rparty <- as.party(female.rpart)
plot(female.rparty, type = "simple")
female.prediction <- predict(female.rpart, female.test, type = "class")
female.truth <- female.test$dec_o
female.roc <- prediction(predict(female.rpart, newdata = female.test, type = "prob")[, 2], female.test$dec_o)
plot(performance(female.roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
female.confusion <- confusion.matrix(female.prediction, female.truth)
female.confusion
male.confusion
library(corrplot)
data <- read.csv("dataset.csv", header = TRUE, stringsAsFactors = FALSE)
attributes <- data[, 25:30]
male.attributes <- data[data$gender == 1, 25:30]
female.attributes <- data[data$gender == 0, 25:30]
correlation <- cor(attributes, use = "complete.obs")
male_correlation <- cor(male.attributes, use = "complete.obs")
female_correlation <- cor(female.attributes, use = "complete.obs")
plot.correlation <- function(correlation, title) {
corrplot(correlation, method = "shade", title = title,
order = "hclust", addrect = 2, mar = c(0, 0, 2, 0),
tl.col = "black", addCoef.col = "black")
}
plot.correlation(correlation, "Attribute Correlation")
plot.correlation(male_correlation, "Men's Attributes (Rated by Female Participants)")
plot.correlation(correlation, "Attribute Correlation")
plot.correlation(female_correlation, "Women's Attributes (Rated by Male Participants)")
library(rpart)
library(rpart.plot)
library(partykit)
library(ROCR)
data.format <- function(data) {
data$dec_o <- as.character(data$dec_o)
data$dec_o[data$dec_o == "1"] <- "yes"
data$dec_o[data$dec_o == "0"] <- "no"
data
}
confusion.matrix <- function(prediction, truth) {
xtab <- (table(prediction, truth))
confusion <- matrix(rev(as.vector(xtab)), ncol = 2, byrow = TRUE)
colnames(confusion) <- c("Pred:yes", "Pred:no")
rownames(confusion) <- c("Actual:yes", "Actual:no")
confusion <- as.table(confusion)
}
confusion.analysis <- function(matrix) {
tp <- matrix[1, 1]
fn <- matrix[1, 2]
fp <- matrix[2, 1]
tn <- matrix[2, 2]
accuracy <- (tp + tn) / (tp + tn + fp + fn)
}
data <- read.csv("data/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
data <- data.format(data)
train <- data[2001:nrow(data), ]
test <- data[1:2000, ]
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o + gender
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
prediction <- predict(rpart, test, type = "class")
truth <- test$dec_o
roc <- prediction(predict(rpart, newdata = test, type = "prob")[, 2], test$dec_o)
plot(performance(roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
confusion <- confusion.matrix(prediction, truth)
confusion
male <- data[data$gender == 1, ]
male.train <- male[1001:nrow(male), ]
male.test <- male[1:1000, ]
male.tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
male.rpart <- rpart(male.tree, data = male.train, method = "class")
male.rparty <- as.party(male.rpart)
plot(male.rparty, type = "simple")
female <- data[data$gender == 0, ]
female.train <- female[1001:nrow(female), ]
female.test <- female[1:1000, ]
female.tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
female.rpart <- rpart(female.tree, data = female.train, method = "class")
female.rparty <- as.party(female.rpart)
plot(female.rparty, type = "simple")
train <- data[2001:nrow(data), ]
test <- data[1:2000, ]
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o + gender
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
roc <- prediction(predict(rpart, newdata = test, type = "prob")[, 2], test$dec_o)
plot(performance(roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
male.roc <- prediction(predict(male.rpart, newdata = male.test, type = "prob")[, 2], male.test$dec_o)
plot(performance(male.roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
female.roc <- prediction(predict(female.rpart, newdata = female.test, type = "prob")[, 2], female.test$dec_o)
plot(performance(female.roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o + gender
rpart <- rpart(tree, data = train)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- match ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o + samerace
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o + age_o + race_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o + age_o + race_o
rpart <- rpart(tree, data = train)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o
+ shar_o + age_o + race_o + pf_o_att + pf_o_sin +
+ pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o + age_o + race_o + pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ .
rparty <- as.party(rpart)
tree <- dec_o ~ .
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o + age_o + race_o + pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ age_o + race_o + pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ age_o + samerace
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
library(RWeka)
tree <- dec_o ~ age_o + samerace
j48 <- J48(tree, data = train)
data <- read.csv("data/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
train <- data[2001:nrow(data), ]
test <- data[1:2000, ]
tree <- dec_o ~ age_o + samerace
j48 <- J48(tree, data = train)
tree <- dec_o ~ age_o + samerace
j48 <- ctree(tree, data = train)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
ctree <- ctree(tree, data = train)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
ctree <- ctree(tree, data = train)
rparty <- as.party(ctree)
plot(ctree, type = "simple")
prp(ctree)
plot(ctree)
plot(ctree)
plot(ctree, type = "simple")
tree <- dec_o ~ attr_o + intel_o + sinc_o
ctree <- ctree(tree, data = train)
plot(ctree, type = "simple")
data <- data.format(data)
train <- data[2001:nrow(data), ]
test <- data[1:2000, ]
tree <- dec_o ~ attr_o + intel_o + sinc_o
ctree <- ctree(tree, data = train)
plot(ctree, type = "simple")
data <- read.csv("data/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
data <- data.format(data)
train <- data[2001:nrow(data), ]
test <- data[1:2000, ]
tree <- dec_o ~ attr_o + intel_o + sinc_o
ctree <- ctree(tree, data = train)
tree <- dec_o ~ attr_o + intel_o
ctree <- ctree(tree, data = train)
library(rpart)
library(rpart.plot)
library(partykit)
library(ROCR)
data.format <- function(data) {
data$dec_o <- as.character(data$dec_o)
data$dec_o[data$dec_o == "1"] <- "yes"
data$dec_o[data$dec_o == "0"] <- "no"
data
}
confusion.matrix <- function(prediction, truth) {
xtab <- (table(prediction, truth))
confusion <- matrix(rev(as.vector(xtab)), ncol = 2, byrow = TRUE)
colnames(confusion) <- c("Pred:yes", "Pred:no")
rownames(confusion) <- c("Actual:yes", "Actual:no")
confusion <- as.table(confusion)
}
confusion.analysis <- function(matrix) {
tp <- matrix[1, 1]
fn <- matrix[1, 2]
fp <- matrix[2, 1]
tn <- matrix[2, 2]
accuracy <- (tp + tn) / (tp + tn + fp + fn)
}
data <- read.csv("data/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
data <- data.format(data)
train <- data[2001:nrow(data), ]
test <- data[1:2000, ]
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
prediction <- predict(rpart, test, type = "class")
truth <- test$dec_o
roc <- prediction(predict(rpart, newdata = test, type = "prob")[, 2], test$dec_o)
plot(performance(roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
confusion <- confusion.matrix(prediction, truth)
confusion
male <- data[data$gender == 1, ]
male.train <- male[1001:nrow(male), ]
male.test <- male[1:1000, ]
male.tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
male.rpart <- rpart(male.tree, data = male.train, method = "class")
male.rparty <- as.party(male.rpart)
plot(male.rparty, type = "simple")
male.prediction <- predict(male.rpart, male.test, type = "class")
male.truth <- male.test$dec_o
male.roc <- prediction(predict(male.rpart, newdata = male.test, type = "prob")[, 2], male.test$dec_o)
plot(performance(male.roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
male.confusion <- confusion.matrix(male.prediction, male.truth)
male.confusion
female <- data[data$gender == 0, ]
female.train <- female[1001:nrow(female), ]
female.test <- female[1:1000, ]
female.tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
female.rpart <- rpart(female.tree, data = female.train, method = "class")
female.rparty <- as.party(female.rpart)
plot(female.rparty, type = "simple")
female.prediction <- predict(female.rpart, female.test, type = "class")
female.truth <- female.test$dec_o
female.roc <- prediction(predict(female.rpart, newdata = female.test, type = "prob")[, 2], female.test$dec_o)
plot(performance(female.roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
female.confusion <- confusion.matrix(female.prediction, female.truth)
female.confusion
library(RWeka)
J48(dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o , data= input, control= Weka_control(M=1,U=TRUE))
J48(dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o , data= train, control= Weka_control(M=1,U=TRUE))
data <- read.csv("data/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
data <- data.format(data)
train <- data[2001:nrow(data), ]
test <- data[1:2000, ]
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o + sinc_o + intel_o + fun_o + amb_o + shar_o + like_o + prob_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ age_o + attr_o + sinc_o + intel_o + fun_o + amb_o + shar_o + like_o + prob_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ age_o + attr_o + sinc_o + intel_o + fun_o + amb_o + shar_o + prob_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ income + age_o + attr_o + sinc_o + intel_o + fun_o + amb_o + shar_o + prob_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ age_o + attr_o + sinc_o + intel_o + fun_o + amb_o + shar_o + prob_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha + attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- match ~ pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha + attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rpart
tree <- dec_o ~ pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha + attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
data$match
tree <- dec_o ~ attr_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- match ~ attr_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rpart
library(rpart)
library(rpart.plot)
library(partykit)
library(ROCR)
data.format <- function(data) {
data$dec_o <- as.character(data$dec_o)
data$dec_o[data$dec_o == "1"] <- "yes"
data$dec_o[data$dec_o == "0"] <- "no"
data
}
confusion.matrix <- function(prediction, truth) {
xtab <- (table(prediction, truth))
confusion <- matrix(rev(as.vector(xtab)), ncol = 2, byrow = TRUE)
colnames(confusion) <- c("Pred:yes", "Pred:no")
rownames(confusion) <- c("Actual:yes", "Actual:no")
confusion <- as.table(confusion)
}
confusion.analysis <- function(matrix) {
tp <- matrix[1, 1]
fn <- matrix[1, 2]
fp <- matrix[2, 1]
tn <- matrix[2, 2]
accuracy <- (tp + tn) / (tp + tn + fp + fn)
}
data <- read.csv("data/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
data <- data.format(data)
train <- data[2001:nrow(data), ]
test <- data[1:2000, ]
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
prediction <- predict(rpart, test, type = "class")
truth <- test$dec_o
roc <- prediction(predict(rpart, newdata = test, type = "prob")[, 2], test$dec_o)
plot(performance(roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
confusion <- confusion.matrix(prediction, truth)
confusion
male <- data[data$gender == 1, ]
male.train <- male[1001:nrow(male), ]
male.test <- male[1:1000, ]
male.tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
male.rpart <- rpart(male.tree, data = male.train, method = "class")
male.rparty <- as.party(male.rpart)
plot(male.rparty, type = "simple")
male.prediction <- predict(male.rpart, male.test, type = "class")
male.truth <- male.test$dec_o
male.roc <- prediction(predict(male.rpart, newdata = male.test, type = "prob")[, 2], male.test$dec_o)
plot(performance(male.roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
male.confusion <- confusion.matrix(male.prediction, male.truth)
male.confusion
female <- data[data$gender == 0, ]
female.train <- female[1001:nrow(female), ]
female.test <- female[1:1000, ]
female.tree <- dec_o ~ pf_o_att + pf_o_sin + pf_o_int + pf_o_fun + pf_o_amb + pf_o_sha + attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
female.rpart <- rpart(female.tree, data = female.train, method = "class")
female.rparty <- as.party(female.rpart)
plot(female.rparty, type = "simple")
library(rpart)
library(rpart.plot)
library(partykit)
library(ROCR)
data.format <- function(data) {
data$dec_o <- as.character(data$dec_o)
data$dec_o[data$dec_o == "1"] <- "yes"
data$dec_o[data$dec_o == "0"] <- "no"
data
}
confusion.matrix <- function(prediction, truth) {
xtab <- (table(prediction, truth))
confusion <- matrix(rev(as.vector(xtab)), ncol = 2, byrow = TRUE)
colnames(confusion) <- c("Pred:yes", "Pred:no")
rownames(confusion) <- c("Actual:yes", "Actual:no")
confusion <- as.table(confusion)
}
confusion.analysis <- function(matrix) {
tp <- matrix[1, 1]
fn <- matrix[1, 2]
fp <- matrix[2, 1]
tn <- matrix[2, 2]
accuracy <- (tp + tn) / (tp + tn + fp + fn)
}
data <- read.csv("data/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
data <- data.format(data)
train <- data[2001:nrow(data), ]
test <- data[1:2000, ]
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
prediction <- predict(rpart, test, type = "class")
truth <- test$dec_o
roc <- prediction(predict(rpart, newdata = test, type = "prob")[, 2], test$dec_o)
plot(performance(roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
confusion <- confusion.matrix(prediction, truth)
confusion
male <- data[data$gender == 1, ]
male.train <- male[1001:nrow(male), ]
male.test <- male[1:1000, ]
male.tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
male.rpart <- rpart(male.tree, data = male.train, method = "class")
male.rparty <- as.party(male.rpart)
plot(male.rparty, type = "simple")
male.prediction <- predict(male.rpart, male.test, type = "class")
male.truth <- male.test$dec_o
male.roc <- prediction(predict(male.rpart, newdata = male.test, type = "prob")[, 2], male.test$dec_o)
plot(performance(male.roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
male.confusion <- confusion.matrix(male.prediction, male.truth)
male.confusion
female <- data[data$gender == 0, ]
female.train <- female[1001:nrow(female), ]
female.test <- female[1:1000, ]
female.tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
female.rpart <- rpart(female.tree, data = female.train, method = "class")
female.rparty <- as.party(female.rpart)
plot(female.rparty, type = "simple")
female.prediction <- predict(female.rpart, female.test, type = "class")
female.truth <- female.test$dec_o
female.roc <- prediction(predict(female.rpart, newdata = female.test, type = "prob")[, 2], female.test$dec_o)
plot(performance(female.roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
female.confusion <- confusion.matrix(female.prediction, female.truth)
female.confusion
