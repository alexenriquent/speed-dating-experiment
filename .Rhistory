rpart.plot(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rparty <- as.party(rpart)
rparty
rpart
tree <- dec_o ~ attr
rpart <- rpart(tree, data = train)
rpart
rparty <- as.party(rpart)
rparty
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o
rpart <- rpart(tree, data = train)
rpart
rparty <- as.party(rpart)
rpart.plot(rpart)
rpart
rparty <- as.party(rpart)
rparty
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o
rpart <- ctree(tree, data = train)
data <- read.csv("data/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
train <- data[2001:nrow(data), ]
test <- data[1:2000, ]
train <- data[2001:nrow(data), ]
test <- data[1:2000, ]
tree <- dec_o ~ attr_o
rpart <- ctree(tree, data = train)
rpart
rparty <- as.party(rpart)
rpart
plot(rparty, type = "simple")
plot(rpart, type = "simple")
tree <- dec_o ~ age_o
rpart <- ctree(tree, data = train)
rpart
rparty <- as.party(rpart)
rparty
plot(rpart, type = "simple")
tree <- dec_o ~ age
rpart <- ctree(tree, data = train)
rpart
plot(rpart, type = "simple")
tree <- dec_o ~ age
rpart <- rpart(tree, data = train)
rpart
library(corrplot)
data <- read.csv("dataset.csv", header = TRUE, stringsAsFactors = FALSE)
attributes <- data[, 25:30]
male.attributes <- data[data$gender == 1, 25:30]
female.attributes <- data[data$gender == 0, 25:30]
library(corrplot)
data <- read.csv("data/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
attributes <- data[, 25:30]
male.attributes <- data[data$gender == 1, 25:30]
female.attributes <- data[data$gender == 0, 25:30]
correlation <- cor(attributes, use = "complete.obs")
male_correlation <- cor(male.attributes, use = "complete.obs")
female_correlation <- cor(female.attributes, use = "complete.obs")
plot.correlation <- function(correlation, title) {
corrplot(correlation, method = "shade", title = title,
order = "hclust", addrect = 2, mar = c(0, 0, 2, 0),
tl.col = "black", addCoef.col = "black")
}
plot.correlation(correlation, "Attribute Correlation")
plot.correlation(male_correlation, "Men's Attributes (Rated by Female Participants)")
plot.correlation(female_correlation, "Women's Attributes (Rated by Male Participants)")
plot.correlation <- function(correlation, title) {
corrplot(correlation, method = "shade", title = title,
addrect = 2, mar = c(0, 0, 2, 0),
tl.col = "black", addCoef.col = "black")
}
plot.correlation(correlation, "Attribute Correlation")
plot.correlation(male_correlation, "Men's Attributes (Rated by Female Participants)")
plot.correlation(female_correlation, "Women's Attributes (Rated by Male Participants)")
plot.correlation <- function(correlation, title) {
corrplot(correlation, method = "shade", title = title,
order = "hclust", addrect = 2, mar = c(0, 0, 2, 0),
tl.col = "black", addCoef.col = "black")
}
plot.correlation(correlation, "Attribute Correlation")
plot.correlation(male_correlation, "Men's Attributes (Rated by Female Participants)")
plot.correlation(female_correlation, "Women's Attributes (Rated by Male Participants)")
attributes <- data[, 25:30]
male.attributes <- data[data$gender == 1, 25:30]
female.attributes <- data[data$gender == 0, 25:31]
correlation <- cor(attributes, use = "complete.obs")
male_correlation <- cor(male.attributes, use = "complete.obs")
female_correlation <- cor(female.attributes, use = "complete.obs")
plot.correlation <- function(correlation, title) {
corrplot(correlation, method = "shade", title = title,
order = "hclust", addrect = 2, mar = c(0, 0, 2, 0),
tl.col = "black", addCoef.col = "black")
}
plot.correlation(female_correlation, "Women's Attributes (Rated by Male Participants)")
attributes <- data[, 25:30]
male.attributes <- data[data$gender == 1, 25:30]
female.attributes <- data[data$gender == 0, 25:30]
correlation <- cor(attributes, use = "complete.obs")
male_correlation <- cor(male.attributes, use = "complete.obs")
female_correlation <- cor(female.attributes, use = "complete.obs")
plot.correlation <- function(correlation, title) {
corrplot(correlation, method = "shade", title = title,
order = "hclust", addrect = 2, mar = c(0, 0, 2, 0),
tl.col = "black", addCoef.col = "black")
}
plot.correlation(correlation, "Attribute Correlation")
plot.correlation(male_correlation, "Men's Attributes (Rated by Female Participants)")
plot.correlation(female_correlation, "Women's Attributes (Rated by Male Participants)")
plot.correlation(male_correlation, "Men's Attributes (Rated by Female Participants)")
plot.correlation(female_correlation, "Women's Attributes (Rated by Male Participants)")
plot.correlation(correlation, "Attribute Correlation")
plot.correlation(male_correlation, "Men's Attributes (Rated by Female Participants)")
plot.correlation(correlation, "Attribute Correlation")
plot.correlation(female_correlation, "Women's Attributes (Rated by Male Participants)")
plot.correlation(correlation, "Attribute Correlation")
library(rpart)
library(rpart.plot)
library(partykit)
library(ROCR)
data.format <- function(data) {
data$dec_o <- as.character(data$dec_o)
data$dec_o[data$dec_o == "1"] <- "yes"
data$dec_o[data$dec_o == "0"] <- "no"
data
}
confusion.matrix <- function(prediction, truth) {
xtab <- (table(prediction, truth))
confusion <- matrix(rev(as.vector(xtab)), ncol = 2, byrow = TRUE)
colnames(confusion) <- c("Pred:yes", "Pred:no")
rownames(confusion) <- c("Actual:yes", "Actual:no")
confusion <- as.table(confusion)
}
confusion.analysis <- function(matrix) {
tp <- matrix[1, 1]
fn <- matrix[1, 2]
fp <- matrix[2, 1]
tn <- matrix[2, 2]
accuracy <- (tp + tn) / (tp + tn + fp + fn)
}
data <- read.csv("data/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
data <- data.format(data)
train <- data[2001:nrow(data), ]
test <- data[1:2000, ]
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rpart <- rpart(tree, data = train, method = "class", control = rpart.control(maxdepth = 30L))
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rpart <- rpart(tree, data = train, method = "class", control = rpart.control(cp = 0.5))
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
rpart <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
summary(rpart)
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0))
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0.001))
summary(rpart)
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0.0001))
summary(rpart)
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0.1))
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0.01))
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0.001))
summary(rpart)
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0.05))
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0.005))
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0.001))
summary(rpart)
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(minbucket = 2, cp = 0))
summary(rpart)
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(minbucket = 2, maxdepth = 5, cp = 0))
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0))
summary(rpart)
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0, maxdepth = 3))
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0, maxdepth = 4))
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0, maxdepth = 3, minbucket = 2))
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0, maxdepth = 4, minbucket = 2))
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0, maxdepth = 4, minsplit = 2))
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0, minsplit = 2))
summary(rpart)
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0, maxdepth = 4))
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0, maxdepth = 5))
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0, maxdepth = 4))
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
prediction <- predict(rpart, test, type = "class")
truth <- test$dec_o
roc <- prediction(predict(rpart, newdata = test, type = "prob")[, 2], test$dec_o)
plot(performance(roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
confusion <- confusion.matrix(prediction, truth)
confusion
library(corrplot)
data <- read.csv("data/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
attributes <- data[, 25:30]
male.attributes <- data[data$gender == 1, 25:30]
female.attributes <- data[data$gender == 0, 25:30]
correlation <- cor(attributes, use = "complete.obs")
male_correlation <- cor(male.attributes, use = "complete.obs")
female_correlation <- cor(female.attributes, use = "complete.obs")
plot.correlation <- function(correlation, title) {
corrplot(correlation, method = "shade", title = title,
order = "hclust", addrect = 2, mar = c(0, 0, 2, 0),
tl.col = "black", addCoef.col = "black")
}
plot.correlation(correlation, "Attribute Correlation")
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0, maxdepth = 4))
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
length(train)
length(train)
nrow(train)
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0.01, maxdepth = 4))
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
rpart <- rpart(tree, data = train, method = "class")
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o + gender
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0.01, maxdepth = 4))
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
rpart <- rpart(tree, data = train, method = "class",
control = rpart.control(cp = 0, maxdepth = 4))
summary(rpart)
rparty <- as.party(rpart)
plot(rparty, type = "simple")
prediction <- predict(rpart, test, type = "class")
truth <- test$dec_o
roc <- prediction(predict(rpart, newdata = test, type = "prob")[, 2], test$dec_o)
plot(performance(roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
confusion <- confusion.matrix(prediction, truth)
confusion
summary(rpart)
rpart
library(rpart)
library(rpart.plot)
library(partykit)
library(ROCR)
data.format <- function(data) {
data$dec_o <- as.character(data$dec_o)
data$dec_o[data$dec_o == "1"] <- "yes"
data$dec_o[data$dec_o == "0"] <- "no"
data
}
confusion.matrix <- function(prediction, truth) {
xtab <- (table(prediction, truth))
confusion <- matrix(rev(as.vector(xtab)), ncol = 2, byrow = TRUE)
colnames(confusion) <- c("Pred:yes", "Pred:no")
rownames(confusion) <- c("Actual:yes", "Actual:no")
confusion <- as.table(confusion)
}
confusion.analysis <- function(matrix) {
tp <- matrix[1, 1]
fn <- matrix[1, 2]
fp <- matrix[2, 1]
tn <- matrix[2, 2]
accuracy <- (tp + tn) / (tp + tn + fp + fn)
}
data <- read.csv("data/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
data <- data.format(data)
train <- data[2001:nrow(data), ]
test <- data[1:2000, ]
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o + gender
rpart <- rpart(tree, data = train, method = "class", control = rpart.control(cp = 0, maxdepth = 4))
rpart
rparty <- as.party(rpart)
plot(rparty, type = "simple")
prediction <- predict(rpart, test, type = "class")
truth <- test$dec_o
roc <- prediction(predict(rpart, newdata = test, type = "prob")[, 2], test$dec_o)
plot(performance(roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
confusion <- confusion.matrix(prediction, truth)
confusion
male <- data[data$gender == 1, ]
male.train <- male[1001:nrow(male), ]
male.test <- male[1:1000, ]
male.tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
male.rpart <- rpart(male.tree, data = male.train, method = "class", control = rpart.control(cp = 0, maxdepth = 4))
male.rparty <- as.party(male.rpart)
plot(male.rparty, type = "simple")
male.prediction <- predict(male.rpart, male.test, type = "class")
male.truth <- male.test$dec_o
male.roc <- prediction(predict(male.rpart, newdata = male.test, type = "prob")[, 2], male.test$dec_o)
plot(performance(male.roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
male.confusion <- confusion.matrix(male.prediction, male.truth)
male.confusion
female <- data[data$gender == 0, ]
female.train <- female[1001:nrow(female), ]
female.test <- female[1:1000, ]
female.tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
female.rpart <- rpart(female.tree, data = female.train, method = "class", control = rpart.control(cp = 0, maxdepth = 4))
female.rparty <- as.party(female.rpart)
plot(female.rparty, type = "simple")
female.prediction <- predict(female.rpart, female.test, type = "class")
female.truth <- female.test$dec_o
female.roc <- prediction(predict(female.rpart, newdata = female.test, type = "prob")[, 2], female.test$dec_o)
plot(performance(female.roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
female.confusion <- confusion.matrix(female.prediction, female.truth)
female.confusion
library(rpart)
library(rpart.plot)
library(partykit)
library(ROCR)
data.format <- function(data) {
data$dec_o <- as.character(data$dec_o)
data$dec_o[data$dec_o == "1"] <- "yes"
data$dec_o[data$dec_o == "0"] <- "no"
data
}
confusion.matrix <- function(prediction, truth) {
xtab <- (table(prediction, truth))
confusion <- matrix(rev(as.vector(xtab)), ncol = 2, byrow = TRUE)
colnames(confusion) <- c("Pred:yes", "Pred:no")
rownames(confusion) <- c("Actual:yes", "Actual:no")
confusion <- as.table(confusion)
}
confusion.analysis <- function(matrix) {
tp <- matrix[1, 1]
fn <- matrix[1, 2]
fp <- matrix[2, 1]
tn <- matrix[2, 2]
accuracy <- (tp + tn) / (tp + tn + fp + fn)
}
data <- read.csv("data/dataset.csv", header = TRUE, stringsAsFactors = FALSE)
data <- data.format(data)
train <- data[2001:nrow(data), ]
test <- data[1:2000, ]
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o + gender
rpart <- rpart(tree, data = train, method = "class", control = rpart.control(cp = 0, maxdepth = 4))
rpart.pruned <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
prediction <- predict(rpart, test, type = "class")
truth <- test$dec_o
roc <- prediction(predict(rpart, newdata = test, type = "prob")[, 2], test$dec_o)
plot(performance(roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
male <- data[data$gender == 1, ]
male.train <- male[1001:nrow(male), ]
male.test <- male[1:1000, ]
male.tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
male.rpart <- rpart(male.tree, data = male.train, method = "class", control = rpart.control(cp = 0, maxdepth = 4))
male.rpart.pruned <- rpart(male.tree, data = male.train, method = "class")
male.rparty <- as.party(male.rpart)
plot(male.rparty, type = "simple")
male.prediction <- predict(male.rpart, male.test, type = "class")
male.truth <- male.test$dec_o
male.roc <- prediction(predict(male.rpart, newdata = male.test, type = "prob")[, 2], male.test$dec_o)
plot(performance(male.roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
male.confusion <- confusion.matrix(male.prediction, male.truth)
male.confusion
female <- data[data$gender == 0, ]
female.train <- female[1001:nrow(female), ]
female.test <- female[1:1000, ]
female.tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
female.rpart <- rpart(female.tree, data = female.train, method = "class", control = rpart.control(cp = 0, maxdepth = 4))
female.rpart.pruned <- rpart(female.tree, data = female.train, method = "class")
female.rparty <- as.party(female.rpart)
plot(female.rparty, type = "simple")
female.prediction <- predict(female.rpart, female.test, type = "class")
female.truth <- female.test$dec_o
female.roc <- prediction(predict(female.rpart, newdata = female.test, type = "prob")[, 2], female.test$dec_o)
plot(performance(female.roc, "tpr", "fpr"), colorize = TRUE)
abline(0, 1, lty = 3)
rpart <- rpart(tree, data = train, method = "class", control = rpart.control(cp = 0, maxdepth = 5))
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
rpart <- rpart(tree, data = train, method = "class", control = rpart.control(cp = 0, maxdepth = 5))
rpart.pruned <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
prp(rpart)
rpart.plot(rpart)
prp(rpart)
plot(rpart)
text(rpart, pretty = 2)
prp(rpart)
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
rpart <- rpart(tree, data = train, method = "class", control = rpart.control(cp = 0, maxdepth = 6))
rpart.pruned <- rpart(tree, data = train, method = "class")
prp(rpart)
rpart <- rpart(tree, data = train, method = "class", control = rpart.control(cp = 0, maxdepth = 7))
rpart.pruned <- rpart(tree, data = train, method = "class")
prp(rpart)
rpart <- rpart(tree, data = train, method = "class", control = rpart.control(cp = 0, maxdepth = 6))
rpart.pruned <- rpart(tree, data = train, method = "class")
prp(rpart)
rpart.plot(rpart)
rpart <- rpart(tree, data = train, method = "class", control = rpart.control(cp = 0, maxdepth = 5))
rpart.pruned <- rpart(tree, data = train, method = "class")
rpart.plot(rpart)
plot(rparty, type = "simple")
plot(rparty)
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o + gender
rpart <- rpart(tree, data = train, method = "class", control = rpart.control(cp = 0, maxdepth = 4))
rpart.pruned <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty)
plot(, type = "simple")
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o + gender
rpart <- rpart(tree, data = train, method = "class", control = rpart.control(cp = 0, maxdepth = 4))
rpart.pruned <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
rpart <- rpart(tree, data = train, method = "class", control = rpart.control(cp = 0, maxdepth = 4))
rpart.pruned <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart)
plot(rparty, type = "simple")
tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
rpart <- rpart(tree, data = train, method = "class", control = rpart.control(cp = 0, maxdepth = 4))
rpart.pruned <- rpart(tree, data = train, method = "class")
rparty <- as.party(rpart.pruned)
plot(rparty, type = "simple")
male <- data[data$gender == 1, ]
male.train <- male[1001:nrow(male), ]
male.test <- male[1:1000, ]
male.tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
male.rpart <- rpart(male.tree, data = male.train, method = "class", control = rpart.control(cp = 0, maxdepth = 4))
male.rpart.pruned <- rpart(male.tree, data = male.train, method = "class")
male.rparty <- as.party(male.rpart.pruned)
plot(male.rparty, type = "simple")
female <- data[data$gender == 0, ]
female.train <- female[1001:nrow(female), ]
female.test <- female[1:1000, ]
female.tree <- dec_o ~ attr_o + intel_o + sinc_o + fun_o + amb_o + shar_o
female.rpart <- rpart(female.tree, data = female.train, method = "class", control = rpart.control(cp = 0, maxdepth = 4))
female.rpart.pruned <- rpart(female.tree, data = female.train, method = "class")
female.rparty <- as.party(female.rpart.pruned)
plot(female.rparty, type = "simple")
